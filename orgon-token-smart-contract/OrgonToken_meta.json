{"compiler":{"version":"0.4.20+commit.3155dd80"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_newOwner","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"supply","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":false,"inputs":[{"name":"_value","type":"uint256"}],"name":"burnTokens","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"balance","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_value","type":"uint256"}],"name":"createTokens","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"remaining","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":true,"name":"_to","type":"address"},{"indexed":false,"name":"_value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_owner","type":"address"},{"indexed":true,"name":"_spender","type":"address"},{"indexed":false,"name":"_value","type":"uint256"}],"name":"Approval","type":"event"}],"devdoc":{"methods":{"allowance(address,address)":{"params":{"_owner":"address to get number of tokens allowed to be transferred\r       from the owner of\r","_spender":"address to get number of tokens allowed to be transferred\r       by the owner of\r"},"return":"number of tokens given spender is currently allowed to transfer\r        from given owner\r"},"approve(address,uint256)":{"params":{"_spender":"address to allow the owner of to transfer tokens from\r       message sender\r","_value":"number of tokens to allow to transfer\r"},"return":"true if token transfer was successfully approved, false otherwise\r"},"balanceOf(address)":{"params":{"_owner":"address to get number of tokens currently belonging to the\r       owner of\r"},"return":"number of tokens currently belonging to the owner of given address\r"},"burnTokens(uint256)":{"params":{"_value":"number of tokens to burn\r"},"return":"true on success, false on error\r"},"createTokens(uint256)":{"params":{"_value":"number of tokens to create\r"},"return":"true if tokens were created successfully, false otherwise\r"},"decimals()":{"return":"number of decimals for this token\r"},"name()":{"return":"name of this token\r"},"setOwner(address)":{"params":{"_newOwner":"address of new owner of the smart contract\r"}},"symbol()":{"return":"symbol of this token\r"},"totalSupply()":{"return":"total number of tokens in circulation\r"},"transfer(address,uint256)":{"params":{"_to":"address to transfer tokens to the owner of\r","_value":"number of tokens to transfer to the owner of given address\r"},"return":"true if tokens were transferred successfully, false otherwise\r"},"transferFrom(address,address,uint256)":{"params":{"_from":"address to transfer tokens from the owner of\r","_to":"address to transfer tokens to the owner of\r","_value":"number of tokens to transfer from given owner to given\r       recipient\r"},"return":"true if tokens were transferred successfully, false otherwise\r"}}},"userdoc":{"methods":{"allowance(address,address)":{"notice":"Tell how many tokens given spender is currently allowed to transfer from\r given owner.\r "},"approve(address,uint256)":{"notice":"Allow given spender to transfer given number of tokens from message sender.\r "},"balanceOf(address)":{"notice":"Get number of tokens currently belonging to given owner.\r "},"burnTokens(uint256)":{"notice":"Burn given number of tokens belonging to message sender.\r May only be called by smart contract owner.\r "},"createTokens(uint256)":{"notice":"Create _value new tokens and give new created tokens to msg.sender.\r May only be called by smart contract owner.\r "},"decimals()":{"notice":"Get number of decimals for this token.\r "},"name()":{"notice":"Get name of this token.\r "},"setOwner(address)":{"notice":"Set new owner for the smart contract.\r May only be called by smart contract owner.\r "},"symbol()":{"notice":"Get symbol of this token.\r "},"totalSupply()":{"notice":"Get total number of tokens in circulation.\r "},"transfer(address,uint256)":{"notice":"Transfer given number of tokens from message sender to given recipient.\r "},"transferFrom(address,address,uint256)":{"notice":"Transfer given number of tokens from given owner to given recipient.\r "}}}},"settings":{"compilationTarget":{"./src/sol/OrgonToken.sol":"OrgonToken"},"libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"./src/sol/AbstractToken.sol":{"keccak256":"0xee24c2379ce89da03e0c1af42ef54f06a9367b1557a6a904d0f0d2a95238de6e","urls":["bzzr://2a1ac563d5a25c8904f3986e77ff21174d9807245e3ef81ea4cdec1372a92564"]},"./src/sol/OrgonToken.sol":{"keccak256":"0x809269c35c76af66d8dc91a95a21277550e95ded22013fe557d2c3659f8d7305","urls":["bzzr://de7d738a5c96c6129e7d6b83c676031472523447bc1866a1020115a1e717ad59"]},"./src/sol/SafeMath.sol":{"keccak256":"0xc0a0d4ffcac794dbc1b3a489d93fe019f4efec1e6008e46746ea67669d810fa6","urls":["bzzr://2c040d56a3194264731c8e92dfadb10c3f7fb6a19cb0a845dc244085c7172ae6"]},"./src/sol/Token.sol":{"keccak256":"0xe6c55c08ade2d6c0ebc12c537d865b89a9830150410c608c3770ae3d638a6b16","urls":["bzzr://9040498ac381e9414dc4954998e107d9e17a2329b86275a204128b169e25ad74"]}},"version":1}